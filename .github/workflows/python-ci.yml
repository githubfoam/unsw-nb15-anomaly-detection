name: Python CI

on:
  push:
    branches: [test]
  pull_request:
    branches: [test]
  schedule:
    - cron:  '15 19 * * *' ##execution of a task in the first minute of the month       

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: [3.9, '3.10', '3.11', '3.12'] # Using modern Python versions
        python-version: ['3.12'] # Using modern Python versions
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Download UNSW-NB15 dataset from Kaggle
      env:
        KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
        KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
      run: |
        # Install Kaggle API client
        pip install kaggle
        
        # Create .kaggle directory and configure with secrets
        mkdir -p ~/.kaggle
        echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
        chmod 600 ~/.kaggle/kaggle.json

        # Download the dataset
        # The dataset name is "plibal/unsw-nb15" on Kaggle
        mkdir -p data
        kaggle datasets download -d plibal/unsw-nb15 -p data

        # Unzip the downloaded file
        unzip data/unsw-nb15.zip -d data
        
        # The dataset contains other files we don't need, so we move the
        # specific CSVs and clean up.
        mv data/UNSW-NB15_1.csv data/UNSW-NB15_2.csv data/UNSW-NB15_3.csv data/UNSW-NB15_4.csv data/
        
        # Clean up the zip file and other unnecessary files
        rm data/unsw-nb15.zip
        rm data/UNSW-NB15_BIN_CLASS.csv data/UNSW-NB15_GT.csv data/UNSW-NB15_MULTI_CLASS.csv data/UNSW-NB15_features.csv
        
        echo "âœ… Dataset downloaded and prepared successfully."
    
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install tools for running notebooks in the CI environment
        pip install nbformat ipykernel jupyter

    - name: Run notebook
      run: |
        # Execute the notebook to ensure all cells run without errors.
        # The `--execute` flag runs all cells.
        # The `--to notebook` and `--output` flags save the executed notebook
        # for inspection, if needed.
        jupyter nbconvert --to notebook --execute notebooks/unsw_nb15_anomaly_detection.ipynb --output test_unsw_nb15_anomaly_detection.ipynb
